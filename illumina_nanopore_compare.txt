
setwd("~/University of Calgary/PostDoc/Atlantic Condor 2021/UofC_Analysis/Seaquencing/16S_Nanopore/Seaquencing_all_fastq_pass")
asv = read.csv("../../Illumina_reads/seaquencing_ASVseq_taxa_4analysis.csv")

library(reshape2)
library(tidyverse)
asvm = melt(asv, id = c("ASVID", "Kingdom", "Phylum", "Class", "Order", "Family", "Genus"))


#library(data.table)
library(splitstackshape)

asvm0 = asvm %>% filter(value != 0)

#error repeating on value column didn't work
#asvm2 = expandRows(asvm0, asvm0$value)
#repeating on 9th column (which is value column did for some reason)
asvm2 = expandRows(asvm0, count = 9)


asvm_split = split(asvm2, asvm2$variable)



#to apply to all elements of asvm list
fun = function(i){
    sub = sample(1:nrow(i), 1000, replace=FALSE)
    x = i[sub,]}

asvm_sub = lapply(asvm_split, fun)

#apply phyla summary and abundance
fun2 = function(i){
    phy = i %>% filter(Kingdom == "Bacteria") %>% group_by(Phylum) %>% summarise(n = n()) %>% mutate(abund = n/(colSums(as.matrix(n)))*100) %>% select(-n)
    }
phylum_sum = lapply(asvm_sub, fun2)    

tax_df = phylum_sum %>% reduce(full_join, by='Phylum')
colnames(tax_df) = c("Phylum", names(phylum_sum))

#shorten column names 
colnames(tax_df) = gsub("JZO.2021.Condor.", "", colnames(tax_df))
colnames(tax_df) = gsub(".Univ.20220222", "", colnames(tax_df))
colnames(tax_df) = gsub("TSU.2021.Condor.", "", colnames(tax_df))
colnames(tax_df) = gsub(".20211213", "", colnames(tax_df))

#reorder and remove samples according to what was sequenced on Nanopore
#tax_df2 = tax_df[,c(1,10,11,12,13,14,15,2,3,4,5,6,7)]

#to be continued...


###########################################
#test run without barcodes 8 and 10
#tax_df3 = tax_df[,c(1,10,11,12,13,14,15,2,4,6,7)]
#colnames(tax_df3)[2:ncol(tax_df3)] = paste("illumina",  colnames(tax_df3)[2:ncol(tax_df3)], sep = "_")
colnames(tax_df)[2:ncol(tax_df)] = paste("illumina",  colnames(tax_df)[2:ncol(tax_df)], sep = "-")
tax_df$Phylum[is.na(tax_df$Phylum)] <- "Unknown"

#trial with incomplete nanopore data
#nano = read.csv("trial3_tax_df.csv",header = TRUE)
nano = read.csv("Phylum_summary.csv",header = TRUE)
colnames(nano) = gsub("barcode[0-9][0-9]_", "", colnames(nano))
colnames(nano) = gsub("_combined", "", colnames(nano))
#nano2 = nano %>% select(!c(X, max))
#colnames(nano2)[2:ncol(nano2)] = paste("nano",  colnames(nano2)[2:ncol(nano2)], sep = "_")
colnames(nano)[2:ncol(nano)] = paste("nano",  colnames(nano)[2:ncol(nano)], sep = "-")
nano$Phylum[is.na(nano$Phylum)] <- "Unknown"

#join illumina and nanopore tables
tax_comb = full_join(tax_df, nano, by = "Phylum")
tax_comb2 = tax_comb %>% pivot_longer(!Phylum, names_to = "Sample", values_to = "Abundance") %>% separate(Sample, into = c("Tech", "Sample"), sep = "-") 




#change underscores to periods in sample names 
tax_comb2$Sample = gsub("_", ".", tax_comb2$Sample)
tax_comb2$Sample = gsub("2A2.D52", "2A2", tax_comb2$Sample)
tax_comb2$Sample = gsub("2AT.E46", "2AT", tax_comb2$Sample)
tax_comb2$Sample = gsub("2B1.B22", "2B1", tax_comb2$Sample)
tax_comb2$Sample = gsub("2B1.C18", "2B1", tax_comb2$Sample)
tax_comb2$Sample = gsub("51.E21", "51", tax_comb2$Sample)
tax_comb2$Sample = gsub("Transect","", tax_comb2$Sample)
tax_comb2$Sample = gsub("0408", "4.8", tax_comb2$Sample)
tax_comb2$Sample = gsub("04", "0.4", tax_comb2$Sample)
tax_comb2$Sample = gsub("0812", "8.12", tax_comb2$Sample)
tax_comb2$Sample = gsub("1216", "12.16", tax_comb2$Sample)
tax_comb2$Sample = gsub("1620", "16.20", tax_comb2$Sample)
tax_comb2$Sample = gsub("2024", "20.24", tax_comb2$Sample)
tax_comb2$Sample = gsub("2428", "24.28", tax_comb2$Sample)
tax_comb2$Sample = gsub("2832", "28.32", tax_comb2$Sample)
tax_comb2$Sample = gsub("3236", "32.36", tax_comb2$Sample)
tax_comb2$Sample = gsub("3640", "36.40", tax_comb2$Sample)
tax_comb2$Sample = gsub("2430", "24.30", tax_comb2$Sample)
tax_comb2$Sample = gsub("51.Kilo.1.4", "51.Kilo.0.4", tax_comb2$Sample)



tax_comb3 = tax_comb2 %>% pivot_wider(names_from = Tech, values_from = Abundance)
tax_comb3[,3:4][is.na(tax_comb3[,3:4])] <- 0
tax_comb3$Phylum2 = ifelse((tax_comb3$illumina+tax_comb3$nano) > 7, tax_comb3$Phylum, "other")


#colour palette
colours = colorRampPalette(c('brown', 'red',"orange", 'gold',  'forestgreen', 'turquoise', 'lightblue', 'navy', 'purple', 'pink', 'grey', 'black'))(16)

#scatter plot comparison 
gg = ggplot(tax_comb3, aes(x = illumina, y = nano)) + geom_point(aes(colour = Phylum2),size = 2.5) + coord_equal() + geom_smooth(method = "lm") + scale_y_continuous(limits = c(0,53)) + scale_x_continuous(limits = c(0,53)) + labs(x = "Illumina abundance (%)", y = "Nanopore abundance (%)", colour = "Phylum") + scale_colour_manual(values = colours)+theme(legend.key = element_blank(), legend.title = element_text(size = 10), legend.key.height = unit(0.1, 'cm'), panel.border = element_rect(fill = NA, colour = "grey80"),  panel.background = element_blank(), panel.grid.major = element_line(colour = "grey94")) + guides(colour=guide_legend(ncol=1))


#scatter plot comparison log scale 
gg = ggplot(tax_comb3, aes(x = illumina, y = nano)) + geom_point(aes(colour = Phylum2),size = 2.5) + coord_equal() + geom_smooth(method = "lm") + scale_y_continuous(limits = c(NA,53), trans = "log10") + scale_x_continuous(limits = c(NA,53), trans = "log10") + labs(x = "Illumina abundance (%)", y = "Nanopore abundance (%)", colour = "Phylum") + scale_colour_manual(values = colours)+theme(legend.key = element_blank(), legend.title = element_text(size = 10), legend.key.height = unit(0.1, 'cm'), panel.border = element_rect(fill = NA, colour = "grey80"),  panel.background = element_blank(), panel.grid.major = element_line(colour = "grey94")) + guides(colour=guide_legend(ncol=1))


#summarize by phylum
tax_comb3$Ratio = tax_comb3$illumina/tax_comb3$nano
tax_comb3$Ratio[!is.finite(tax_comb3$Ratio)] <- NA
tax_comb3$Ratio2 = tax_comb3$nano/tax_comb3$illumina
tax_comb3$Ratio2[!is.finite(tax_comb3$Ratio2)] <- NA
tax_comb4 = tax_comb3 %>% group_by(Phylum) %>% summarize(avg_ratio_illum = mean(Ratio, na.rm = TRUE), sd_ratio_illum = sd(Ratio, na.rm = TRUE),avg_ratio_nano = mean(Ratio2, na.rm = TRUE)*-1, sd_ratio_nano = sd(Ratio2, na.rm = TRUE)*-1, avg_illum = mean(illumina), avg_nano = mean(nano))
#tax_comb4$ratio_combo = ifelse(tax_comb4$avg_ratio_illum >1, tax_comb4$avg_ratio_illum, tax_comb4$avg_ratio_nano)
#tax_comb5 <- tax_comb4[order(-tax_comb4$ratio_combo),]\
tax_comb5 <- tax_comb4[order(-tax_comb4$avg_ratio_illum),]
tax_comb5$Phylum <- factor(tax_comb5$Phylum,levels=unique(tax_comb5$Phylum))
tax_comb5 = tax_comb5[complete.cases(tax_comb5[ , 2]),]
tax_comb5 = tax_comb5[tax_comb5$avg_ratio_illum>0,]

 xx = ggplot(tax_comb5, aes(x = avg_ratio_illum, y = Phylum))+ geom_vline(xintercept =1, colour = "red", alpha = 0.25) + geom_point(aes(size = avg_illum, colour= avg_nano)) + labs(x = "Illumina abundance : Nanopore abundance", y = "", size = "Illumina \nabundance (%)", colour = "Nanopore \nabundance (%)" ) +theme(axis.text.y = element_text(size = 7), panel.border = element_rect(fill = NA, colour = "grey80"), legend.key = element_blank(), panel.background = element_blank(), panel.grid.major = element_line(colour = "grey99")) + scale_x_continuous(trans = "log10") + scale_radius(breaks = c(1,5,10,20), range = c(1,6)) + scale_colour_gradient(high = "#28393E", low = "#90ADB6")


#create ratio column
#tax_comb4 = tax_comb3 %>% filter(illumina + nano > 1)
#tax_comb4 = tax_comb3
#tax_comb4$Ratio = tax_comb4$illumina/tax_comb4$nano
#tax_comb5 <- tax_comb4[order(-tax_comb4$Ratio),]
#tax_comb5 = tax_comb5 %>% filter(Ratio != Inf)
#tax_comb5$Phylum <- factor(tax_comb5$Phylum,levels=unique(tax_comb5$Phylum))

#xx = ggplot(tax_comb4, aes(x = Ratio, y = Phylum))+ geom_vline(xintercept =1, colour = "red", alpha = 0.5) + geom_boxplot(width =0.75, outlier.size = 0.5) + labs(x = "Illumina abundance : Nanopore abundance", y = "") +theme(axis.text.y = element_text(size = 7), panel.border = element_rect(fill = NA, colour = "grey80"),  panel.background = element_blank(), panel.grid.major = element_line(colour = "grey94"))

#correlation - pearson
 cor(tax_comb3$illumina, tax_comb3$nano)
0.9013775

#correlation - spearman 
cor(tax_comb3$illumina, tax_comb3$nano, method = "spearman")
0.8333326

s = lm(formula = tax_comb3$nano ~ tax_comb3$illumina)
summary(s)
Call:
lm(formula = tax_comb3$nano ~ tax_comb3$illumina)

Residuals:
    Min      1Q  Median      3Q     Max 
-24.674  -0.243  -0.243  -0.115  37.090 

Coefficients:
                   Estimate Std. Error t value Pr(>|t|)    
(Intercept)        0.242737   0.047679   5.091 3.82e-07 ***
tax_comb3$illumina 0.842221   0.007938 106.097  < 2e-16 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 2.35 on 2598 degrees of freedom
Multiple R-squared:  0.8125,	Adjusted R-squared:  0.8124 
F-statistic: 1.126e+04 on 1 and 2598 DF,  p-value: < 2.2e-16




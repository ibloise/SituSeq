# Open powershell and type 'wsl' 

#change directory
cd My\ Documents/University\ of\ Calgary/PostDoc/Atlantic\ Condor\ 2021/UofC_Analysis/Seaquencing/16S_Nanopore/fastq_pass_combined/
#concatenate files 
#for i in barcode*; do echo $i; cat $i/*.fastq.gz > ${i}_cat.fastq.gz;done
###I think simply concatenating the zipped files resulted in fewer reads in the final analysis for some reason?  

#unzip files - don't know if this is necessary
#for i in *.fastq.gz; do gunzip $i; done

#in R
setwd("~/University of Calgary/PostDoc/Atlantic Condor 2021/UofC_Analysis/Seaquencing/16S_Nanopore/fastq_pass_combined/")
library(dada2)
library(tidyverse)
library(ShortRead)

#try concatenating nanopore files in R
folders <- list.files(pattern = "barcode..$" )

for (directory in folders) {
print(directory) 
files = list.files(path = paste(directory, "/", sep = ""), pattern = ".fastq") 
print(files)
fout = file.path(paste(directory, "combined.fastq.gz", sep = "_"))
    for (fl in files) {
    fq = readFastq(paste(directory,"/",fl, sep = ""))
        writeFastq(fq, fout, mode="a")
        }
}




#save path to object
path = getwd()

#Forward and fastq filenames have format: 
#barcode01_combined.fastq 
fnFs = sort(list.files(path, pattern="_combined.fastq.gz", full.names = TRUE))

#Extract sample names, assuming filenames have format: #samplename_XXX.fastq.gz
sample.names = sapply(strsplit(basename(fnFs), "_"), `[`, 1)


#filter and trim reads- create new paths for new files 
filtFs <- file.path(path, "filtered", paste0(sample.names, "_filt.fastq.gz"))
names(filtFs) = sample.names


#filter and trim command - compress true or false?
out = filterAndTrim(fnFs, filtFs, trimLeft = 100, trimRight = 100, maxLen = 1850, minLen = 1350,  truncQ = 0, compress = FALSE)
#see how many reads were lost
head(out,12) 

#can see distribution of sequence read lengths: 
table(nchar(getSequences('filtered/barcode01_filt.fastq.gz')))
plot(table(nchar(getSequences('filtered/barcode01_filt.fastq.gz'))))

#for loop for getting sequences and assigning taxonomy - with subsetting to 1000 reads
for (fastq in filtFs) {
print(fastq)
seqs = getSequences(fastq)
sub = sample(1:length(seqs), 1000, replace=FALSE) 
seq2 = seqs[sub]
tax_rc = assignTaxonomy(seq2, "../../silva_nr99_v138.1_train_set.fa.gz", multithread=TRUE, tryRC = TRUE)
base = basename(fastq)
samples = gsub("_filt.fastq.gz", "", base)
write.csv(tax_rc, paste('tax', samples, 'csv', sep = '.' ))
}

#Time for for loop of 5 samples (all sequences): system.time()
# user   system  elapsed 
#50500.41    69.48  7178.46 

#Time for for loop of 5 samples (1000 sequence subset) ~7 minutes/sample: system.time()
# user   system  elapsed 
#12473.63    30.50  2162.59

#Time for for loop of 10 samples (1000 sequence subset) 
# user   system  elapsed 
#25717.75    34.67  4300.14 

#read in newly made csv files 
temp = list.files(pattern="tax.*.csv")
temp_list = list()
for (i in 1:length(temp)) {
    sample = gsub(".csv", "", temp[[i]])
    sample2 = gsub("tax.","",sample)
    new = read.csv(temp[i]) %>% filter(Kingdom == "Bacteria") %>% group_by(Phylum) %>% summarise(n = n()) %>% mutate(abund = n/(colSums(as.matrix(n)))*100) %>% select(-n)
    colnames(new) = c("Phylum", sample2)
temp_list[[length(temp_list) + 1]] <- new }


#merge all data frames in list
tax_df = temp_list %>% reduce(full_join, by='Phylum')

#long format
tax_df_long = tax_df %>% pivot_longer(!Phylum, names_to = "Sample", values_to = "Abundance")

#colour scheme - 12 colours for max 12 barcodes
colours = c('brown', 'red',"orange", 'gold',  'forestgreen', 'turquoise', 'lightblue', 'navy', 'purple', 'pink', 'grey', 'black')


#bubble plot
 xx = ggplot(tax_df_long, aes(x = Sample, y = reorder(Phylum, desc(Phylum)))) + geom_point(aes(colour = Sample, size= Abundance), alpha = 0.7) +theme(legend.key = element_blank(), legend.title = element_text(size = 10), panel.border = element_rect(fill = NA, colour = "grey80"), axis.text.y = element_text(size = 7), axis.text.x = element_text(size = 8, angle = 315, vjust = 0, hjust =0), panel.background = element_blank(), panel.grid.major = element_line(colour = "grey94")) + scale_radius(range=c(1,8), breaks = c(1,10,30,50)) + labs(x = "", y = "") + scale_colour_manual(values = colours )
 xx
 #save bubble plot
 ggsave("bubble_plot_phyla.png", height = 6, width = 5.5)
 
 #top phyla 
 tax_df$max = apply(tax_df[,2:ncol(tax_df)], 1, FUN = max, na.rm = TRUE)
 #select top 10 most abundant taxa, based on abundance in one sample
 tax_df2 <- tax_df[order(-tax_df$max),][1:10,]
 
 tax_df2_long = tax_df2 %>% select(-max) %>% pivot_longer(!Phylum, names_to = "Sample", values_to = "Abundance")

#bar plot of most abundant phyla
gg = ggplot(tax_df2_long, aes(x = Sample, y = Abundance)) + geom_bar(aes(fill = Phylum), colour = "black", position = "stack", stat = "identity") + scale_fill_manual(values = colours) + labs(x = "", y = "Relative Abundance (%)") + theme(panel.background = element_blank(), panel.border = element_rect(fill =NA, colour = "black"), axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.3), legend.key = element_blank()) + scale_y_continuous(limits = c(0,100), expand = c(0,0))
gg
#save plot
ggsave("bar_plot_top_phyla.png", height = 5, width = 5)





